{"version":3,"file":"static/js/460.3045b33a.chunk.js","mappings":"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","sources":["components/views/inmueble/InmuebleScreen.js","helpers/formatterPeso.js","selectors/getInmuebleById.js"],"sourcesContent":["import React, { useMemo } from 'react'\r\nimport { useParams, Navigate, useNavigate} from 'react-router-dom'\r\nimport { getInmuebleById } from '../../../selectors/getInmuebleById';\r\nimport { formatterPeso } from '../../../helpers/formatterPeso';\r\n\r\nconst InmuebleScreen = ({ inmuebles }) => {\r\n  const { inmuebleId } = useParams();\r\n  const inmueble = useMemo( () => getInmuebleById(inmuebleId,inmuebles),[ inmuebleId,inmuebles ] );\r\n\r\n  const navigate = useNavigate();\r\n  const handleReturn = () => { navigate( -1 ); }\r\n\r\n  if(!inmueble) { return <Navigate to='/' /> };\r\n  const { id,detalle } = inmueble;\r\n\r\n  return (\r\n    <div className='row d-block d-sm-flex mt-3 mt-sm-5 px-4'>\r\n      <div id=\"slider\" className=\"carousel slide w-50 w-sm-100\" data-bs-ride=\"carousel\">        {/* <!-- Carousel --> */}\r\n        <div className=\"carousel-inner shadow-sm\">                                          {/* <!-- The slideshow/carousel --> */}\r\n          <div className=\"carousel-item active\">\r\n            <img src={ detalle.imagen.data } alt=\"Foto\" className=\"img-inmueble d-block img-thumbnail animate__animated animate__fadeIn w-100\" />\r\n          </div>\r\n          {\r\n            detalle.images.map(image => (\r\n              <div className=\"carousel-item\" key={image.name}>\r\n                <img src={ image.data } id={image.name} key={image.name} alt={image.name} className=\"img-inmueble d-block img-thumbnail animate__animated animate__fadeIn w-100\" />\r\n              </div>            \r\n            ))\r\n          }\r\n        </div>\r\n        <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#slider\" data-bs-slide=\"prev\">      {/* <!-- Left and right controls/icons --> */}\r\n          <span className=\"carousel-control-prev-icon py-5 shadow-sm\"></span>\r\n        </button>\r\n        <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#slider\" data-bs-slide=\"next\">\r\n          <span className=\"carousel-control-next-icon py-5 shadow-sm\"></span>\r\n        </button>\r\n        <div className=\"carousel-indicators\">       {/* <!-- Indicators/dots --> */}\r\n          <button type=\"button\" data-bs-target=\"#slider\" data-bs-slide-to={0} key={0} className=\"active shadow-sm\"></button>\r\n          {\r\n            detalle.images.map((image,index) => (\r\n              <button type=\"button\" data-bs-target=\"#slider\" data-bs-slide-to={index + 1} key={index + 1} className='shadow-sm'></button>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className='w-50 w-sm-100'>\r\n        <h1 className='mt-2 mt-sm-0'>{ detalle.nombre }</h1>\r\n        <hr></hr>\r\n        <ul className='list-group'>\r\n          <li className='list-group-item fw-bolder border-white'>Código Inmueble: <span className='text-muted'>{ id }</span></li>\r\n          <li className='list-group-item fw-bolder border-white'>Categoría: <span className='text-muted'>{ detalle.categoria }</span></li>\r\n          <li className='list-group-item fw-bolder border-white'>Tipo: <span className='text-muted'>{ detalle.tipo }</span></li>\r\n          <li className='list-group-item fw-bolder border-white'>Estado: <span className='text-muted'>{ detalle.estado }</span></li>\r\n        </ul>\r\n        <h5 className='mt-3'>Valor</h5>\r\n        <ul className='list-group list-group-flush'>\r\n          <li className='list-group-item fw-bolder'><span className='text-dark fs-4'>{ formatterPeso.format(detalle.valor) }</span> <span className='text-muted'>{detalle.tipo === 'Arriendo' ? 'mensual' : ''}</span></li>\r\n        </ul>\r\n      </div>\r\n      <p></p>\r\n      <div className='animate__animated animate__fadeIn'>\r\n        <hr></hr>\r\n        <h5 className='mt-3'>Descripción</h5>\r\n        <ul className='list-group list-group-horizontal-sm list-group-flush'>\r\n          <li className='list-group-item fw-bolder text-justify'><span className='text-muted'>{ detalle.descripcion }</span></li>\r\n        </ul>\r\n        <h5 className='mt-3'>Características</h5>\r\n        <ul className='list-group list-group-horizontal-sm'>\r\n          <li className='list-group-item fw-bolder border-white'>Habitaciones: <span className='text-muted'>{ detalle.habitaciones }</span></li>\r\n          <li className='list-group-item fw-bolder border-white'>Baños: <span className='text-muted'>{ detalle.baños }</span></li>\r\n          <li className='list-group-item fw-bolder border-white'>Parqueaderos: <span className='text-muted'>{ detalle.parqueaderos }</span></li>\r\n        </ul>\r\n        <h5 className='mt-3'>Localización</h5>\r\n        <ul className='list-group list-group-horizontal-sm'>\r\n          <li className='list-group-item fw-bolder border-white'>Zona/Barrio: <span className='text-muted'>{ detalle.sector }</span></li>\r\n          <li className='list-group-item fw-bolder border-white'>Estrato: <span className='text-muted'>{ detalle.estrato }</span></li>\r\n          <li className='list-group-item fw-bolder border-white'>Ciudad: <span className='text-muted'>{ detalle.ciudad }</span></li>\r\n          <li className='list-group-item fw-bolder border-white'>Departamento: <span className='text-muted'>{ detalle.departamento }</span></li>\r\n          <li className='list-group-item fw-bolder border-white'>País: <span className='text-muted'>{ detalle.pais }</span></li>\r\n        </ul>\r\n        <ul className='list-group list-group-horizontal-sm'>\r\n           <li className='list-group-item fw-bolder border-white'>Ubicación: { detalle.ubicacion }</li>\r\n        </ul>\r\n        <br></br>\r\n        <div className=\"d-grid gap-2 col mx-md-0\">\r\n          <button className='btn-inmueble btn btn-md btn-primary w-100 fw-bolder' onClick={ handleReturn }>\r\n            Regresar\r\n          </button>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default InmuebleScreen","export const formatterPeso = new Intl.NumberFormat('es-CO', {   //Formato moneda $ pesos Colmbianos\r\n    style: 'currency',\r\n    currency: 'COP',\r\n    minimumFractionDigits: 0\r\n});","export const getInmuebleById = ( id = '',inmuebles ) => {\r\n     return inmuebles.find( inmueble => inmueble.id === parseInt(id));\r\n}"],"names":["_ref","inmuebles","inmuebleId","useParams","inmueble","useMemo","getInmuebleById","navigate","useNavigate","_jsx","Navigate","to","id","detalle","_jsxs","className","children","src","imagen","data","alt","images","map","image","name","type","index","nombre","categoria","tipo","estado","formatterPeso","format","valor","descripcion","habitaciones","baños","parqueaderos","sector","estrato","ciudad","departamento","pais","ubicacion","onClick","handleReturn","Intl","NumberFormat","style","currency","minimumFractionDigits","arguments","length","undefined","find","parseInt"],"sourceRoot":""}