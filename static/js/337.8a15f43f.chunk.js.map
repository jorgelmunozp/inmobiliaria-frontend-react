{"version":3,"file":"static/js/337.8a15f43f.chunk.js","mappings":"yOAAO,MAAMA,EAAgBC,IAAwD,IAAvD,YAAEC,EAAW,UAACC,EAAS,cAACC,EAAa,UAACC,GAAWJ,EAC3E,OACIK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,4BAA4B,yBAAmBG,SAAA,EAC1DF,EAAAA,EAAAA,KAAA,SAAOI,MAAQP,EAAYQ,SAAYC,GAAWR,EAAcQ,GAC5DC,KAAK,WAAWX,YAAcA,EAAcY,GAAG,eAC/CT,UAAYA,EAAYU,aAAa,SACzCT,EAAAA,EAAAA,KAAA,SAAOU,QAAQ,eAAeX,UAAU,kDAAiDG,SAAIN,QAElG,ECNEe,EAAYhB,IAAyJ,IAAxJ,UAAEiB,EAAS,cAACC,EAAa,aAACC,EAAY,aAACC,EAAY,iBAACC,EAAgB,gBAACC,EAAe,YAACC,EAAW,gBAACC,EAAe,oBAACC,EAAmB,YAACC,GAAa1B,EAC1K,OACEK,EAAAA,EAAAA,KAAA,OAAKD,UAAU,oDAAmDG,UAC9DC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,2CAA0CG,SAAA,EACvDF,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACd,GAAI,YAAaZ,YAAa,UAAWC,UAAWe,EAAWd,cAAgBQ,GAAWS,EAAaT,EAAOA,OAAOF,OAAQL,UAAU,4FAClJC,EAAAA,EAAAA,KAACN,EAAa,CAACE,YAAa,gBAAcC,UAAWgB,EAAef,cAAgBQ,GAAWU,EAAiBV,EAAOA,OAAOF,OAAQL,UAAU,4FAEhJC,EAAAA,EAAAA,KAAA,UAAQD,UAAU,iGAAiGwB,QAAUL,EAAahB,SACtImB,KAEJrB,EAAAA,EAAAA,KAAA,KAAGD,UAAU,eAAcG,SAAGY,QAE9B,ECqCV,EAxCoBnB,IAA0B,IAAzB,QAAE6B,EAAO,QAACC,GAAS9B,EACtC,MAAQiB,EAAUG,IAAiBW,EAAAA,EAAAA,UAAS,KACpCb,EAAcG,IAAqBU,EAAAA,EAAAA,UAAS,KAC5CZ,EAAaG,IAAoBS,EAAAA,EAAAA,UAAS,IAE5CC,GAAWC,EAAAA,EAAAA,OACX,SAAEC,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAoBhC,OACE5B,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,oDAAmDG,SAAA,EAC9DF,EAAAA,EAAAA,KAAA,MAAID,UAAU,aAAYG,SAAEsB,KAC5BxB,EAAAA,EAAAA,KAAA,MAAAE,UAAIF,EAAAA,EAAAA,KAACgC,EAAAA,EAAI,CAACC,MAAOR,EAASS,YAAa,KAAMC,MAAO,IAAKC,OAAQ,IAAKrC,UAAU,YAChFC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACW,EAAS,CAACC,UAAWA,EAAWG,aAAcA,EACpCF,cAAeA,EAAeG,iBAAkBA,EAChDF,aAAcA,EAAcG,gBAAiBA,EAC7CC,YA1BGA,KAClB,GAbcmB,QAaVzB,GAZSyB,QAYkBxB,EAA6B,CAC1DI,EAAgB,IAChB,MAAMqB,EAAS,CACb/B,KAAMgC,EAAAA,EAAMC,MACZC,QAAS,CAAEC,KAfFL,UAiBXR,EAASS,GACTX,EAAS,IAAK,CAAEgB,SAAS,GAC3B,KAAyB,KAAd/B,GAAsC,KAAlBC,EAC7BI,EAAgB,oCAEhBF,EAAa,IACbC,EAAiB,IACjBC,EAAgB,yCAClB,EAWyCE,gBAAiB,UAC3CC,oBAAqB,gBAAcC,YAAa,gBAEzD,C","sources":["components/forms/inputs/InputPassword.js","components/login/LoginForm.js","components/login/LoginScreen.js"],"sourcesContent":["export const InputPassword = ({ placeholder,inputText,onInputChange,className }) => {\r\n    return (\r\n        <>\r\n            <div className=\"form-floating text-center\" data-mdb-input-init>\r\n                <input value={ inputText } onChange={ (target) => onInputChange(target) } \r\n                    type=\"password\" placeholder={ placeholder } id=\"formPassword\" \r\n                    className={ className } autoComplete=\"off\" />\r\n                <label htmlFor=\"formPassword\" className=\"form-label text-muted text-nowrap text-truncate\" >{ placeholder }</label>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { InputText } from '../forms/inputs/InputText';\r\nimport { InputPassword } from '../forms/inputs/InputPassword';\r\n\r\nexport const LoginForm = ({ userInput,passwordInput,alertMessage,setUserInput,setPasswordInput,setAlertMessage,handleLogin,placeholderUser,placeholderPassword,buttonTitle }) => {\r\n  return (\r\n    <div className='container-fluid mt-1 text-center user-select-none'>\r\n        <div className=\"d-grid gap-2 col-5 mx-auto w-50 w-sm-100\">\r\n          <InputText id={'userLogin'} placeholder={'Usuario'} inputText={userInput} onInputChange={(target) => setUserInput(target.target.value)} className='input form-control rounded border-muted border-1 text-muted text-center my-1 shadow-sm' />\r\n          <InputPassword placeholder={'Contraseña'} inputText={passwordInput} onInputChange={(target) => setPasswordInput(target.target.value)} className='input form-control rounded border-muted border-1 text-muted text-center my-1 shadow-sm' />\r\n     \r\n          <button className='btn-login btn btn-md btn-outline-primary border border-2 my-1 py-3 rounded fw-bolder shadow-sm' onClick={ handleLogin }>\r\n            { buttonTitle }\r\n          </button>\r\n          <p className='alertMessage'>{ alertMessage }</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/authContext';\r\nimport { types } from '../../types/types';\r\nimport { Logo } from '../icons/logo/Logo';\r\nimport { LoginForm } from './LoginForm';\r\nimport './login.css';\r\n\r\nconst superuser = process.env.REACT_APP_SUPERUSER;\r\nconst password = process.env.REACT_APP_PASSWORD;\r\nconst username = process.env.REACT_APP_USERNAME;\r\n\r\nconst LoginScreen = ({ myTitle,myColor }) => {\r\n  const [ userInput,setUserInput ] = useState(\"\");\r\n  const [ passwordInput,setPasswordInput ] = useState(\"\");\r\n  const [ alertMessage,setAlertMessage ] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n  const handleLogin = () => {\r\n    if( userInput === superuser && passwordInput === password ) {\r\n      setAlertMessage(\"\");\r\n      const action = {\r\n        type: types.login,\r\n        payload: { name: username }\r\n      }\r\n      dispatch(action);\r\n      navigate('/', { replace: true });\r\n    } else if( userInput === \"\" && passwordInput === \"\" ) {\r\n      setAlertMessage(\"Ingrese usuario y contraseña\");\r\n    } else {\r\n      setUserInput(\"\");\r\n      setPasswordInput(\"\");\r\n      setAlertMessage(\"Usuario o contraseña no válidos\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid mt-5 text-center user-select-none'>\r\n        <h3 className='main-color'>{myTitle}</h3>\r\n        <h1><Logo color={myColor} strokeWidth={1.25} width={1.5} height={1.5} className='fs-4'/></h1>\r\n        <br/>\r\n        <LoginForm userInput={userInput} setUserInput={setUserInput}\r\n                   passwordInput={passwordInput} setPasswordInput={setPasswordInput}\r\n                   alertMessage={alertMessage} setAlertMessage={setAlertMessage}\r\n                   handleLogin={handleLogin} placeholderUser={'Usuario'}\r\n                   placeholderPassword={'Contraseña'} buttonTitle={'Inmuebles'}\r\n        />\r\n    </div>\r\n  )\r\n}\r\nexport default LoginScreen"],"names":["InputPassword","_ref","placeholder","inputText","onInputChange","className","_jsx","_Fragment","children","_jsxs","value","onChange","target","type","id","autoComplete","htmlFor","LoginForm","userInput","passwordInput","alertMessage","setUserInput","setPasswordInput","setAlertMessage","handleLogin","placeholderUser","placeholderPassword","buttonTitle","InputText","onClick","myTitle","myColor","useState","navigate","useNavigate","dispatch","useContext","AuthContext","Logo","color","strokeWidth","width","height","process","action","types","login","payload","name","replace"],"sourceRoot":""}