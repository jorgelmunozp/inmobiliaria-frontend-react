{"version":3,"file":"static/js/2686.076a8382.chunk.js","mappings":"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","sources":["components/views/inmueble/InmuebleUpload.js","helpers/formatterPeso.js"],"sourcesContent":["import { lazy, useState, useEffect } from 'react';\r\nimport { formatterPeso } from '../../../helpers/formatterPeso.js';\r\nimport { myTitle, myColor } from '../../../global.js';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst CountriesBar = lazy(() => import('../../bars/countries/CountriesBar.js'));\r\nconst Dropdown = lazy(() => import('../../forms/dropdown/Dropdown.js'));\r\nconst InputFile = lazy(() => import('../../forms/inputs/InputFile.js'));\r\nconst InputNumber = lazy(() => import('../../forms/inputs/InputNumber.js'));\r\nconst InputText = lazy(() => import('../../forms/inputs/InputText.js'));\r\nconst InputTextArea = lazy(() => import('../../forms/inputs/InputTextArea.js'));\r\nconst ButtonFetch = lazy(() => import('../../forms/buttons/ButtonFetch.js'));\r\nconst HomeThumbnail = lazy(() => import('../../icons/home/HomeThumbnail.js'));\r\n\r\nconst InmuebleUpload = ({ urlApiInmuebles, categorias, tipos, estados, caracteristicas, paises }) => {\r\n  let createFlag = false;\r\n  const [responseStatus, setResponseStatus] = useState(0);\r\n\r\n  const [ image, setImage ] = useState('');\r\n  const [ status, setStatus ] = useState(\"\");\r\n  const [ type, setType ] = useState(''); \r\n  const [ category, setCategory ] = useState(''); \r\n  const [ characteristics, setCharacteristics ] = useState(''); \r\n  const [ name, setName ] = useState(''); \r\n  const [ rooms, setRooms ] = useState(''); \r\n  const [ bathrooms, setBathooms ] = useState(\"\");\r\n  const [ garages , setGarages ] = useState(\"\");\r\n  const [ area, setArea ] = useState(\"\");\r\n  const [ value, setValue ] = useState(\"\");\r\n  const [ city, setCity ] = useState(\"\"); \r\n  const [ state, setState ] = useState(\"\"); \r\n  const [ country, setCountry ] = useState(\"\"); \r\n  const [ neighborhood, setNeighborhood ] = useState(\"\");\r\n  const [ stratum, setStratum ] = useState(\"\");\r\n  const [ description, setDescription ] = useState(\"\");\r\n  const [ characteristic, setCharacteristic ] = useState(\"\");\r\n  const [ images, setImages ] = useState([]); \r\n\r\n  // Inmueble description\r\n  let descriptionInmueble = myTitle \r\n        + ( type.toLocaleLowerCase() === \"arriendo\" ? \" arrienda \" : (type.toLocaleLowerCase() === \"venta\" ? \" vende \" : \"\")  )\r\n        + ( characteristic.toLocaleLowerCase() )\r\n        + ( category.toLocaleLowerCase() === \"apartamento\" ? \" apartamento en \" : (category.toLocaleLowerCase() === \"casa\" ? \" casa en \" : \"\") )\r\n        + ( name )\r\n        + ( neighborhood ? \", sector \" + neighborhood : \"\" )\r\n        + ( (city || state || country) ? (city ? (\", en la ciudad de \" + city + \", \" + state + \", \" + country) : ( state ? \", en el departamento de \" + state + \", \" + country : \", en el país \" + country)) + \". \" : \"\" )\r\n        + ( area ? \"Tiene un área de \" + area + \" m2\" : \"\" )\r\n        + ( (rooms || bathrooms || garages) ? (\" y consta de \" \r\n              + ( rooms ? ( rooms === \"0\" ? \"\" : ( rooms === \"1\" ? rooms + \" habitación, \" : rooms + \" habitaciones, \" )) : \"\" ) \r\n              + ( bathrooms ? ( bathrooms === \"0\" ? \"\" : ( bathrooms === \"1\" ? bathrooms + \" baño, \" : bathrooms + \" baños, \")) : \"\" ) \r\n              + ( garages ? ( garages === \"0\" ? \"\" : ( garages === \"1\" ? garages + \" parqueadero \" : garages + \" parqueaderos \")) : \"\") \r\n            ) : \"\")\r\n        + ( stratum ? \"y su estrato es \" + stratum + \". \" : \"\" )\r\n        + ( value ? \"Su valor es \" + formatterPeso.format(value) + (type.toLocaleLowerCase() === \"arriendo\" ? \" mensual. \" : \". \") : \"\" )\r\n      ;\r\n\r\n  // Change last character @ from the characteristics\r\n  useEffect(() => {\r\n    if( characteristics.lastIndexOf('@') !== -1 ) {\r\n      if( category.toLocaleLowerCase() === \"apartamento\" ) {\r\n        setCharacteristic(characteristics.replace(/.$/, 'o'));\r\n      } else if( category.toLocaleLowerCase() === \"casa\" ) {\r\n        setCharacteristic(characteristics.replace(/.$/, 'a'));\r\n      }\r\n    } else if( characteristics.lastIndexOf('@') === -1 ) {\r\n      setCharacteristic(characteristics);\r\n    }\r\n    setDescription(descriptionInmueble);\r\n  },[characteristics, descriptionInmueble, category]);\r\n\r\n  // Convert image -> image base 64\r\n  const [imageData, setImageData] = useState({\r\n    name: '',\r\n    data: ''\r\n  });\r\n  const reader = new FileReader();\r\n  if (image) { reader.readAsDataURL(image) }\r\n  reader.onload = () => {\r\n    setImageData({\r\n      name: category.toLocaleLowerCase() + \"-\" + name.toLocaleLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").split(' ').join('-') + \"-0.\" + image.name.split('.')[1],\r\n      data: reader.result\r\n    });\r\n  };\r\n  reader.onerror = (error) => { console.log('Error img -> img base 64: ', error); };\r\n\r\n  // Convert images -> images base 64\r\n  const [imagesData, setImagesData] = useState([{\r\n    name: '',\r\n    data: ''\r\n  }]);\r\n  useEffect(() => { \r\n    if (images) {\r\n      const arrayImages = [{ name: '', data: '' }];\r\n      for(let i = 0; i < images.length; i++) {\r\n        const readerMultiple = new FileReader();\r\n        readerMultiple.readAsDataURL(images[i]);\r\n        readerMultiple.onload = () => {\r\n          arrayImages[i] = { \r\n            name: category.toLocaleLowerCase() + \"-\" + name.toLocaleLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").split(' ').join('-') + \"-\" + i + \".\" + images[i].name.split('.')[1],\r\n            data: readerMultiple.result \r\n          };\r\n          setImagesData(arrayImages);\r\n        };\r\n        readerMultiple.onerror = (error) => { console.log('Error img -> img base 64: ', error); };\r\n      }\r\n    }\r\n  },[images,category,name]);\r\n\r\n  // Query body for POST\r\n  const dataInmueble = `{\r\n    \"detalle\": {\r\n      \"nombre\": \"${name}\",\r\n      \"imagen\": ${JSON.stringify(imageData)},\r\n      \"categoria\": \"${category}\",\r\n      \"tipo\": \"${type}\",\r\n      \"habitaciones\": \"${rooms}\",\r\n      \"baños\": \"${bathrooms}\",\r\n      \"parqueaderos\": \"${garages}\",\r\n      \"area\": \"${area}\",\r\n      \"valor\": \"${value}\",\r\n      \"descripcion\": \"${description}\",\r\n      \"ciudad\": \"${city}\",\r\n      \"departamento\": \"${state}\",\r\n      \"pais\": \"${country}\",\r\n      \"sector\": \"${neighborhood}\",\r\n      \"estrato\": \"${stratum}\",\r\n      \"estado\": \"${status}\",\r\n      \"images\": ${JSON.stringify(imagesData)}\r\n    }\r\n  }`;\r\n\r\n  // Create flag for POST\r\n  if(name!==\"\" && image!==\"\" && category!==\"\" && type!==\"\" && rooms!==\"\" && bathrooms!==\"\" && garages!==\"\" && area!==\"\" && value!==\"\" && description!==\"\" && city!==\"\" && neighborhood!==\"\" && stratum!==\"\" && status!==\"\") { \r\n    createFlag = true; \r\n  }\r\n\r\n  // POST response\r\n  if(200 <= responseStatus && responseStatus <= 299){\r\n    setResponseStatus(0);\r\n    Swal.fire({\r\n      title: \"Nuevo Inmueble\",\r\n      text: \"Inmueble creado con éxito\",\r\n      icon: \"success\",\r\n      confirmButtonColor: myColor,\r\n    });\r\n    setImage(\"\");\r\n    setName(\"\");\r\n    setCategory(\"\");\r\n    setType(\"\");\r\n    setCharacteristic(\"\");\r\n    setRooms(\"\");\r\n    setBathooms(\"\");\r\n    setGarages(\"\");\r\n    setArea(\"\");\r\n    setValue(\"\");\r\n    setDescription(\"\");\r\n    setCity(\"\");\r\n    setState(\"\");\r\n    setCountry(\"\");\r\n    setNeighborhood(\"\");\r\n    setStratum(\"\");\r\n    setStatus(\"\");\r\n    setImages(\"\");\r\n  } else if(400 <= responseStatus && responseStatus <= 499){\r\n    setResponseStatus(0);\r\n    Swal.fire({\r\n      title: \"Lo sentimos\",\r\n      text: \"El inmueble no pudo ser creado\",\r\n      icon: \"error\",\r\n      confirmButtonColor: myColor,\r\n    });\r\n  } else if(500 <= responseStatus && responseStatus <= 599){\r\n    setResponseStatus(0);\r\n    Swal.fire({\r\n      title: \"Lo sentimos\",\r\n      text: \"El inmueble no pudo ser creado\",\r\n      icon: \"error\",\r\n      confirmButtonColor: myColor,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h5 className='my-3 my-lg-4 my-md-4 my-sm-5'><center>Subir Inmueble</center></h5>\r\n      <center><HomeThumbnail color={'#aaaaaa'} height={2} width={2} /></center>\r\n      <div className=\"container border mt-3 mb-2 pt-1 shadow-sm\">\r\n        <div className='row d-block d-sm-flex'>\r\n          <div className=\"col col-sm-4 my-2\">\r\n            <InputFile id={'image-primary'} placeholder={'Imagen'} iconSize={7.5} iconStrokeWidth={0.5} multiple={false} acceptFiles={\"image/*\"} file={image} setFile={setImage} className=\"input form-control border-muted text-muted shadow-sm\"/>\r\n          </div>\r\n          <div className='col'>\r\n            <div className='row d-block d-sm-flex'>\r\n              <div className='col my-2 my-md-2 my-sm-1'>\r\n                <Dropdown placeholder={'Estado'} query={status} defaultSelect={'Disponible'} parameters={estados} setQuery={setStatus} className={\"input form-control rounded border-muted border-1 text-muted shadow-sm\"}/>\r\n              </div>\r\n              <div className='col my-2'>\r\n                <Dropdown placeholder={'Tipo negocio'} query={type} parameters={tipos.slice(1,tipos.length)} setQuery={setType} className={\"input form-control rounded border-muted border-1 text-muted shadow-sm\"}/>\r\n              </div>\r\n            </div>\r\n            <div className='row d-block d-sm-flex'>\r\n              <div className='col my-2'>\r\n                <Dropdown placeholder={'Categoría'} query={category} parameters={categorias.slice(1,categorias.length)} setQuery={setCategory} className={\"input form-control rounded border-muted border-1 text-muted shadow-sm\"}/>\r\n              </div>\r\n              <div className='col my-2'>\r\n                <Dropdown placeholder={'Características'} query={characteristic} parameters={caracteristicas} setQuery={setCharacteristics} className={\"input form-control rounded border-muted border-1 text-muted shadow-sm\"}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='row d-block d-sm-flex'>\r\n          <div className='col my-2 my-md-2 my-sm-1'>\r\n            <InputText id={'nombre'} placeholder={'Nombre'} inputText={name} onInputChange={(values) => setName(values.target.value)} className={'input form-control rounded border-muted border-1 align-bottom text-muted text-center px-2 shadow-sm w-100'}/>\r\n          </div>\r\n          <div className='col col-sm-4 my-2 my-md-2 my-sm-1'>\r\n            <InputText id={'sector'} placeholder={'Sector'} inputText={neighborhood} onInputChange={(values) => setNeighborhood(values.target.value)} className={'input form-control rounded border-muted border-1 align-bottom text-muted text-center px-2 shadow-sm w-100'}/>\r\n          </div>\r\n        </div>\r\n        <div className='row d-block d-sm-flex'>\r\n          <div className='col my-2'>\r\n            <CountriesBar countries={paises} country={country} setCountry={setCountry} state={state} setState={setState} city={city} setCity={setCity} />\r\n          </div>\r\n        </div>\r\n        <div className='row d-block d-sm-flex'>\r\n          <div className='col my-2'>\r\n            <InputNumber placeholder={'Área'} id={'area'} value={area} onInputChange={(values) => setArea(values.value)} className={'input form-control rounded border-muted border-1 align-bottom text-muted text-center px-2 shadow-sm w-100'}/>\r\n          </div>\r\n          <div className='col my-2'>\r\n            <InputNumber placeholder={'Habitaciones'} id={'habitaciones'} value={rooms} onInputChange={(values) => setRooms(values.value)} className={'input form-control rounded border-muted border-1 align-bottom text-muted text-center px-2 shadow-sm w-100'}/>\r\n          </div>\r\n          <div className='col my-2'>\r\n            <InputNumber placeholder={'Baños'} id={'baños'} value={bathrooms} onInputChange={(values) => setBathooms(values.value)} className={'input form-control rounded border-muted border-1 align-bottom text-muted text-center px-2 shadow-sm w-100'}/>\r\n          </div>\r\n          <div className='col my-2'>\r\n            <InputNumber placeholder={'Parqueaderos'} id={'parqueaderos'} value={garages} onInputChange={(values) => setGarages(values.value)} className={'input form-control rounded border-muted border-1 align-bottom text-muted text-center px-2 shadow-sm w-100'}/>\r\n          </div>\r\n          <div className='col my-2'>\r\n            <InputNumber placeholder={'Estrato'} id={'estrato'} value={stratum} onInputChange={(values) => setStratum(values.value)} className={'input form-control rounded border-muted border-1 align-bottom text-muted text-center px-2 shadow-sm w-100'}/>\r\n          </div>\r\n          <div className='col my-2'>\r\n            <InputNumber prefix={'$ '} placeholder={'Valor'} id={'valor'} value={value} onInputChange={(values) => setValue(values.value)} className={'input form-control rounded border-muted border-1 align-bottom text-muted text-center px-2 shadow-sm w-100'}/>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col my-0 my-sm-2'>\r\n            <InputTextArea id={'descripcion'} placeholder={'Descripción'} inputText={description} onInputChange={(values) => setDescription(values.target.value)} rows={3} className={'input form-control rounded border-muted border-1 align-bottom text-muted text-justify px-3 pt-5 pb-4 h-auto shadow-sm w-100'}/>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className=\"col my-2\">\r\n            <InputFile id={'images-secondary'} placeholder={'Imágenes'} iconSize={3.5} iconStrokeWidth={1} multiple={true} acceptFiles={\"image/*\"} file={images} setFile={setImages} className=\"input form-control border-muted text-muted pt-4 pb-3 shadow-sm\"/>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className=\"col my-2\">\r\n            <ButtonFetch icon={<HomeThumbnail color={'#ffffff'} height={1.5} width={1.5} />} title={'Crear'} urlApi={urlApiInmuebles} contenidoApi={JSON.stringify(dataInmueble)} setResponseStatus={setResponseStatus} createFlag={createFlag} className='bg-main-color' ></ButtonFetch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default InmuebleUpload;","export const formatterPeso = new Intl.NumberFormat('es-CO', {   //Formato moneda $ pesos Colmbianos\r\n    style: 'currency', currency: 'COP', minimumFractionDigits: 0\r\n});\r\nexport default formatterPeso;\r\n"],"names":["CountriesBar","lazy","Dropdown","InputFile","InputNumber","InputText","InputTextArea","ButtonFetch","HomeThumbnail","_ref","urlApiInmuebles","categorias","tipos","estados","caracteristicas","paises","createFlag","responseStatus","setResponseStatus","useState","image","setImage","status","setStatus","type","setType","category","setCategory","characteristics","setCharacteristics","name","setName","rooms","setRooms","bathrooms","setBathooms","garages","setGarages","area","setArea","value","setValue","city","setCity","state","setState","country","setCountry","neighborhood","setNeighborhood","stratum","setStratum","description","setDescription","characteristic","setCharacteristic","images","setImages","descriptionInmueble","myTitle","toLocaleLowerCase","formatterPeso","format","useEffect","lastIndexOf","replace","imageData","setImageData","data","reader","FileReader","readAsDataURL","onload","normalize","split","join","result","onerror","error","console","log","imagesData","setImagesData","arrayImages","i","length","readerMultiple","dataInmueble","JSON","stringify","Swal","title","text","icon","confirmButtonColor","myColor","_jsxs","_Fragment","children","_jsx","className","color","height","width","id","placeholder","iconSize","iconStrokeWidth","multiple","acceptFiles","file","setFile","query","defaultSelect","parameters","setQuery","slice","inputText","onInputChange","values","target","countries","prefix","rows","urlApi","contenidoApi","Intl","NumberFormat","style","currency","minimumFractionDigits"],"sourceRoot":""}