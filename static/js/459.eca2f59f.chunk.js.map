{"version":3,"file":"static/js/459.eca2f59f.chunk.js","mappings":"uMAGA,MAAMA,GAAYC,EAAAA,EAAAA,MAAK,IAAM,gCA8C7B,EAxCoBC,IAAqD,IAApD,KAAEC,EAAI,YAAEC,EAAW,MAAEC,EAAK,QAAEC,EAAO,QAAEC,GAASL,EACjE,MAAQM,EAAUC,IAAiBC,EAAAA,EAAAA,UAAS,KACpCC,EAAcC,IAAqBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAaC,IAAoBJ,EAAAA,EAAAA,UAAS,IAE5CK,GAAWC,EAAAA,EAAAA,OACX,SAAEC,IAAaC,EAAAA,EAAAA,YAAWd,GAoBhC,OACEe,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAEf,KAC5BgB,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACnB,EAAI,CAACoB,MAAOhB,EAASiB,YAAa,KAAMC,MAAO,IAAKC,OAAQ,IAAKN,UAAU,YAChFE,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACtB,EAAS,CAACQ,UAAWA,EAAWC,aAAcA,EACpCE,cAAeA,EAAeC,iBAAkBA,EAChDC,aAAcA,EAAcC,gBAAiBA,EAC7Ca,YA1BGA,KAClB,GAbcC,QAaVpB,GAZSoB,QAYkBjB,EAA6B,CAC1DG,EAAgB,IAChB,MAAMe,EAAS,CACbC,KAAMzB,EAAM0B,MACZC,QAAS,CAAEC,KAfFL,UAiBXX,EAASY,GACTd,EAAS,IAAK,CAAEmB,SAAS,GAC3B,KAAyB,KAAd1B,GAAsC,KAAlBG,EAC7BG,EAAgB,oCAEhBL,EAAa,IACbG,EAAiB,IACjBE,EAAgB,2CAYuBqB,gBAAiB,UAC3CC,oBAAqB,gBAAcC,YAAa,iB","sources":["components/login/LoginScreen.js"],"sourcesContent":["import './login.css';\r\nimport { lazy, useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst LoginForm = lazy(() => import('./LoginForm.js'));\r\n\r\nconst superuser = process.env.REACT_APP_SUPERUSER;\r\nconst password = process.env.REACT_APP_PASSWORD;\r\nconst username = process.env.REACT_APP_USERNAME;\r\n\r\nconst LoginScreen = ({ Logo, AuthContext, types, myTitle, myColor }) => {\r\n  const [ userInput,setUserInput ] = useState(\"\");\r\n  const [ passwordInput,setPasswordInput ] = useState(\"\");\r\n  const [ alertMessage,setAlertMessage ] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const { dispatch } = useContext(AuthContext);\r\n\r\n  const handleLogin = () => {\r\n    if( userInput === superuser && passwordInput === password ) {\r\n      setAlertMessage(\"\");\r\n      const action = {\r\n        type: types.login,\r\n        payload: { name: username }\r\n      }\r\n      dispatch(action);\r\n      navigate('/', { replace: true });\r\n    } else if( userInput === \"\" && passwordInput === \"\" ) {\r\n      setAlertMessage(\"Ingrese usuario y contrase침a\");\r\n    } else {\r\n      setUserInput(\"\");\r\n      setPasswordInput(\"\");\r\n      setAlertMessage(\"Usuario o contrase침a no v치lidos\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid mt-5 text-center user-select-none'>\r\n        <h3 className='main-color'>{myTitle}</h3>\r\n        <h1><Logo color={myColor} strokeWidth={1.25} width={1.5} height={1.5} className='fs-4'/></h1>\r\n        <br/>\r\n        <LoginForm userInput={userInput} setUserInput={setUserInput}\r\n                   passwordInput={passwordInput} setPasswordInput={setPasswordInput}\r\n                   alertMessage={alertMessage} setAlertMessage={setAlertMessage}\r\n                   handleLogin={handleLogin} placeholderUser={'Usuario'}\r\n                   placeholderPassword={'Contrase침a'} buttonTitle={'Inmuebles'}\r\n        />\r\n    </div>\r\n  )\r\n}\r\nexport default LoginScreen"],"names":["LoginForm","lazy","_ref","Logo","AuthContext","types","myTitle","myColor","userInput","setUserInput","useState","passwordInput","setPasswordInput","alertMessage","setAlertMessage","navigate","useNavigate","dispatch","useContext","_jsxs","className","children","_jsx","color","strokeWidth","width","height","handleLogin","process","action","type","login","payload","name","replace","placeholderUser","placeholderPassword","buttonTitle"],"sourceRoot":""}